{"version":3,"sources":["libs/tracking.js","components/Navbar/styles.js","components/Navbar/index.js","components/TranslateBox/styles.js","components/TranslateButton/styles.js","components/TranslateButton/index.js","components/TranslateBox/index.js","components/Feedback/styles.js","components/Feedback/index.js","components/Feedback/ThankYou.js","components/Feedback/OpenFeedback.js","containers/styles.js","mobileComponents/Navbar/styles.js","mobileComponents/Navbar/index.js","mobileComponents/TranslateBox/styles.js","mobileComponents/TranslateBox/index.js","mobileComponents/Feedback/styles.js","mobileComponents/Feedback/index.js","mobileComponents/Feedback/ThankYou.js","mobileComponents/Feedback/OpenFeedback.js","mobileComponents/TranslateButton/styles.js","mobileComponents/TranslateButton/index.js","containers/Mobile/index.js","containers/Translate/index.js","App.js","reportWebVitals.js","index.js"],"names":["Event","category","action","label","ReactGA","event","NavbarContainer","styled","div","NavInner","NavbarImage","img","NavBar","src","process","alt","style","fontSize","fontWeight","color","TranslateBoxContainer","TranslateBoxInner","form","TranslateBoxBar","TranslateBoxFrom","TranslateBoxTo","TranslateBoxOptionBox","TranslateBoxImage","TranslateBoxOption","button","props","selected","TranslateBoxUnderline","span","TranslateBoxLineHolder","TranslateButtonInner","TranslateButtonObject","TranslateButton","tFrom","tTo","setTFrom","inputCode","setTTo","setOutputCode","setInputCode","outputCode","onClick","e","console","log","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","message","catch","err","TranslateBox","id","height","borderBottom","type","target","borderRadius","active","tempTo","marginLeft","justifyContent","borderRight","className","placeholder","value","onValueChange","highlight","tabSize","alignItems","width","readOnly","FeedbackContainer","FeedbackInner","FeedbackHeader","FeedbackBody","FeedbackFooter","FeedbackSubmitButton","p","OpenFeedbackButtonContainer","OpenFeedbackButton","OpenFeedbackText","FeedbackText","textarea","TYFeedbackContainer","TYFeedbackInner","TYFeedbackHeader","Feedback","useState","text","setText","closeOnEscapeKeyDown","charCode","keyCode","onClose","useEffect","document","addEventListener","removeEventListener","show","stopPropagation","paddingLeft","paddingRight","cursor","onChange","feedback","setTimeout","setFeedbackReceived","FeedbackReceived","OpenFeedback","setShowFeedback","Font","fontFamily","borderTop","marginTop","paddingBottom","flexDirection","backgroundColor","margin","SubmitButton","TranslateButtonContainer","Mobile","showFeedback","feedbackReceived","display","Translate","App","trackingId","initialize","pageview","window","location","pathname","search","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c26b4e6.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\r\n\r\n/* this is for initialize GA setup */\r\nexport const initGA = (trackingId) => {\r\n    ReactGA.initialize(trackingId);\r\n}\r\n\r\n/* this is for getting url website when user access our websites */\r\nexport const PageView = () => {\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n}\r\n\r\n/**\r\n* Event - Add custom tracking event. \r\n* This's for tracking when event clicked something like that they'll send the data to GA\r\n* @param {string} category\r\n* @param {string} action\r\n* @param {string} label\r\n*/\r\nexport const Event = (category, action, label) => {\r\n    ReactGA.event({\r\n        category: category,\r\n        action: action,\r\n        label: label\r\n    });\r\n};","import styled from 'styled-components'\r\n// import { NavLink } from 'react-router-dom'\r\n\r\n// NavBar\r\nexport const NavbarContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 65px;\r\n    background-color: white;\r\n    font-family: Roboto, sans-serif;\r\n`\r\n\r\nexport const NavInner = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: left; \r\n    align-items: center; \r\n`\r\n\r\n// export const NavbarLink = styled(NavLink)`\r\n//     padding: 0px 1vw;\r\n//     color: black;\r\n//     text-decoration: none;\r\n//     font: normal normal normal 24px/1.4em helvetica-w01-roman,helvetica-w02-roman,helvetica-lt-w10-roman,sans-serif;\r\n// `\r\n\r\nexport const NavbarImage = styled.img`\r\n    height: 2rem;\r\n    padding: 0px 30px 0px 30px;\r\n`\r\n","import React from 'react'\r\nimport {\r\n  NavInner, NavbarContainer, NavbarImage\r\n} from './styles'\r\n\r\nconst NavBar = () => (\r\n    <NavbarContainer>\r\n        <NavInner>\r\n        <NavbarImage src={`${process.env.PUBLIC_URL}/translate.png`} alt=\"Translate Image\" />\r\n        <p style={{ fontSize: '30px ', fontWeight: '500', color: '#70757A' }}>Code Translate</p>\r\n        </NavInner>\r\n    </NavbarContainer>\r\n)\r\n\r\nexport default NavBar","import styled from 'styled-components'\r\n\r\n// TranslateBox\r\nexport const TranslateBoxContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    height: 80px;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    background-color: rgba(248, 248, 248, 0.87);\r\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n    font-family: Roboto, sans-serif;\r\n`\r\n\r\n// Actually the translate box\r\nexport const TranslateBoxInner = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 400px;\r\n    justify-content: flex-start; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    box-shadow: 0 0 2px 2px rgba(0,0,0,0.22);\r\n    margin: 50px 50px 0 50px;\r\n`\r\n\r\nexport const TranslateBoxBar = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: space-between; \r\n    align-items: center; \r\n`\r\n\r\nexport const TranslateBoxFrom = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n    height: 90%;\r\n    justify-content: flex-start; \r\n    align-items: flex-start; \r\n    padding: 20px;\r\n    margin: 0px;\r\n    font-size: 20px; \r\n    font-weight: normal;\r\n    color: black;\r\n    border: 0;\r\n    font-family: Roboto, sans-serif;\r\n    resize: none;\r\n    outline: 0;\r\n    :focus {\r\n        outline: 0;\r\n    }\r\n`\r\n\r\nexport const TranslateBoxTo = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n    height: 90%;\r\n    justify-content: flex-start; \r\n    align-items: flex-start; \r\n    padding: 20px;\r\n    font-size: 20px; \r\n    font-weight: normal;\r\n    color: black;\r\n    margin: 0px;\r\n    border: none;\r\n`\r\n\r\nexport const TranslateBoxDivider = styled.div`\r\n    width: 0px;\r\n    height: 100%;\r\n    border: solid silver;\r\n`\r\n\r\nexport const TranslateBoxOptionBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: flex-start; \r\n    align-items: center; \r\n    text-transform: uppercase;\r\n`\r\n\r\nexport const TranslateBoxImage = styled.img`\r\n    height: 20px;\r\n    width: 20px;\r\n    padding: 10px;\r\n    border-radius: 90px;\r\n    cursor: pointer;\r\n    :hover{\r\n        background-color: #E7E7E7;\r\n    }\r\n    /* aria-label=\"Swap languages (Ctrl+Shift+S)\" */\r\n`\r\n\r\nexport const TranslateBoxOption = styled.button`\r\n    display: flex;\r\n    width: 125px;\r\n    height: 100%;\r\n    justify-content: space-between; \r\n    align-items: center; \r\n    border: none;\r\n    font-size: 18px; \r\n    font-weight: 500;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    color: ${props => (props.selected ? '#1A73E8' : 'grey')};\r\n    flex-direction: column;\r\n    text-transform: uppercase;\r\n    font-family: Roboto, sans-serif;\r\n    :hover{\r\n        background-color: #E7E7E7;\r\n    }\r\n`\r\n\r\nexport const TranslateBoxUnderline = styled.span`\r\n    width: 115px;\r\n    height: 5px;\r\n    background-color: ${props => (props.selected ? '#1A73E8' : '')};\r\n`\r\n\r\nexport const TranslateBoxLineHolder = styled.span`\r\n    width: 115px;\r\n    height: 5px;\r\n    background-color: ''\r\n`\r\n","import styled from 'styled-components'\r\n\r\n// TranslateBox\r\nexport const TranslateButtonContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    height: 100px;\r\n    margin-top: 60px;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    background-color: transparent;\r\n`\r\n\r\n// Actually the translate box\r\nexport const TranslateButtonInner = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 40px;\r\n    justify-content: flex-end; \r\n    align-items: center; \r\n    flex-direction: row;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    margin-right: 12px;\r\n`\r\n\r\nexport const TranslateButtonObject = styled.div`\r\n    display: flex;\r\n    width: 150px;\r\n    height: 100%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    background-color: #1A73E8;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    border-radius: 15px;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    :hover {\r\n        opacity: 90%;\r\n        box-shadow: 0 0 2px 2px rgba(0,0,0,0.22);\r\n    }\r\n`","import React, { useState } from 'react'\r\nimport { Event } from '../../libs/tracking'\r\nimport {\r\n    TranslateButtonContainer, TranslateButtonInner, TranslateButtonObject\r\n} from './styles'\r\n\r\nconst TranslateButton = ({ tFrom, setTFrom, tTo, setTTo, inputCode, setInputCode, outputCode, setOutputCode }) => {\r\n    const handleSubmit = (e) => {\r\n        Event('Desktop', 'Translate Button', 'Translate')\r\n\r\n        console.log(\"...Translating...\")\r\n        console.log(tFrom)\r\n        console.log(tTo)\r\n        console.log(inputCode)\r\n\r\n        e.preventDefault() // prevents refresh of the page\r\n        fetch('/translate', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ tTo, tFrom, inputCode })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            console.log(res)\r\n            if (res.outputCode) {\r\n                setOutputCode(res.outputCode)\r\n            } else {\r\n                setOutputCode(res.message)\r\n            }\r\n        }).catch((err) => {\r\n            console.log('Error:', err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TranslateButtonInner>\r\n            <TranslateButtonObject onClick={handleSubmit}>Translate</TranslateButtonObject>\r\n        </TranslateButtonInner>\r\n    )\r\n}\r\n\r\nexport default TranslateButton","import React, { useState } from 'react'\r\n\r\nimport { Event } from '../../libs/tracking'\r\nimport {\r\n    TranslateBoxImage, TranslateBoxInner, TranslateBoxContainer, TranslateBoxBar, TranslateBoxOptionBox, TranslateBoxFrom, TranslateBoxTo, TranslateBoxDivider, TranslateBoxOption, TranslateBoxUnderline, TranslateBoxLineHolder\r\n} from './styles'\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport './styles.css'\r\nimport TranslateButton from '../TranslateButton'\r\n\r\nconst TranslateBox = ({ tFrom, setTFrom, tTo, setTTo, inputCode, setInputCode, outputCode, setOutputCode }) => {\r\n    const switchLanguages = () => {\r\n        Event('Desktop', 'Switch Languages Button', 'Switch')\r\n        const tempTo = tTo\r\n        const tempFrom = tFrom\r\n        setTTo(tempFrom)\r\n        setTFrom(tempTo)\r\n    }\r\n\r\n    return (\r\n        <TranslateBoxContainer>\r\n            <TranslateBoxInner id=\"translateForm\">\r\n                <TranslateBoxBar style={{ height: '65px', borderBottom: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n                    <TranslateBoxOptionBox>\r\n                        <TranslateBoxOption type=\"button\" selected={tFrom === \"java\"} id=\"java\" onClick={e => setTFrom(e.target.id)} style={{ borderRadius: '15px 0px 0px 0px' }}>\r\n                            <TranslateBoxLineHolder />\r\n                            Java\r\n                            <TranslateBoxUnderline type=\"button\" selected={tFrom === \"java\"} />\r\n                        </TranslateBoxOption>\r\n                        <TranslateBoxOption type=\"button\" selected={tFrom === \"python\"} id=\"python\" onClick={e => setTFrom(e.target.id)} active={tFrom === \"python\"}>\r\n                            <TranslateBoxLineHolder />\r\n                            Python\r\n                            <TranslateBoxUnderline selected={tFrom === \"python\"} />\r\n                        </TranslateBoxOption>\r\n                    </TranslateBoxOptionBox>\r\n                    <TranslateBoxImage type=\"image\" onClick={switchLanguages} src={`${process.env.PUBLIC_URL}/translate.png`} alt=\"Translate Image Submit\"/> \r\n                    <TranslateBoxOptionBox>\r\n                        <TranslateBoxOption type=\"button\" style={{ marginLeft: '10px' }} selected={tTo === \"java\"} id=\"java\" onClick={e => setTTo(e.target.id)}>\r\n                            <TranslateBoxLineHolder />\r\n                            Java\r\n                            <TranslateBoxUnderline selected={tTo === \"java\"} />\r\n                        </TranslateBoxOption>\r\n                        <TranslateBoxOption type=\"button\" selected={tTo === \"python\"} id=\"python\" onClick={e => setTTo(e.target.id)}>\r\n                            <TranslateBoxLineHolder />\r\n                            Python\r\n                            <TranslateBoxUnderline selected={tTo === \"python\"} />\r\n                        </TranslateBoxOption>\r\n                        <TranslateButton  tFrom={tFrom} setTFrom={setTFrom} tTo={tTo} setTTo={setTTo} inputCode={inputCode} setInputCode={setInputCode} outputCode={outputCode} setOutputCode={setOutputCode}/>\r\n                    </TranslateBoxOptionBox>\r\n                </TranslateBoxBar>\r\n                <TranslateBoxBar style={{ justifyContent: 'flex-start' }}>  {/* This is for the translate area */}\r\n                    {/* <TranslateBoxFrom onChange={(e) => setInputCode(e.target.value)} style={{alignItems: 'flex-start'}} placeholder=\"Enter code\" /> */}\r\n                    <TranslateBoxFrom style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n                        <Editor\r\n                            className=\"container__editor\"\r\n                            placeholder=\"Enter code\"\r\n                            value={inputCode}\r\n                            onValueChange={(inputCode) => setInputCode(inputCode)}\r\n                            highlight={(inputCode) => inputCode}\r\n                            tabSize={4}\r\n                            style={{\r\n                                alignItems: 'flex-start',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }} \r\n                        />\r\n                    </TranslateBoxFrom>\r\n                    <TranslateBoxTo>\r\n                        <Editor\r\n                            className=\"container__editor\"\r\n                            placeholder=\"Code Translate is still in beta mode, but feel free to give it a go and leave feedback! Thanks for visiting!\"\r\n                            value={outputCode}\r\n                            onValueChange={(outputCode) => setOutputCode(outputCode)}\r\n                            highlight={(outputCode) => outputCode}\r\n                            readOnly= \"true\"\r\n                            tabSize={4}\r\n                            style={{\r\n                                alignItems: 'flex-start',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                        />\r\n                    </TranslateBoxTo>\r\n                </TranslateBoxBar>\r\n            </TranslateBoxInner>\r\n        </TranslateBoxContainer>\r\n    )\r\n}\r\n\r\nexport default TranslateBox","import styled from 'styled-components'\r\n\r\n// Feedback Modal\r\nexport const FeedbackContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    opacity: ${props => (props.selected ? '1' : '0')};\r\n    transition: all 0.3s ease-in-out;\r\n    pointer-events: ${props => (props.selected ? 'visible' : 'none' )};\r\n`\r\n\r\nexport const FeedbackInner = styled.div`\r\n    display: flex;\r\n    width: 25%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    transform: translateY(${props => (props.selected ? '0px' : '-200px' )});\r\n    transition: all 0.3s ease-in-out;\r\n    box-shadow: 0 0 2pt 1pt black;\r\n    padding: 0px;\r\n`\r\n\r\n// Actual Feedback Content\r\nexport const FeedbackHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between; \r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    background-color: #546E7A;\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    border-radius: 15px 15px 0px 0px;\r\n`\r\n\r\nexport const FeedbackBody = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    width: 100%;\r\n    border-top: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n`\r\n\r\nexport const FeedbackFooter = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end; \r\n    align-items: center;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding-right: 15px;\r\n`\r\n\r\nexport const FeedbackSubmitButton = styled.p`\r\n    display: flex;\r\n    width: 30%;\r\n    height: 100%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`\r\n\r\n// Open Modal BUtton\r\nexport const OpenFeedbackButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 370px 50px 0 50px;\r\n`\r\n\r\nexport const OpenFeedbackButton = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n`\r\n\r\nexport const OpenFeedbackText = styled.p`\r\n    cursor: pointer;\r\n    font-weight: normal;\r\n    font-style: italic;\r\n    color: #5F6368;\r\n    font-size: 18px;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    padding-top: 10px;\r\n    :hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nexport const FeedbackText = styled.textarea`\r\n    display: flex;\r\n    width: 95%;\r\n    height: 300px;\r\n    justify-content: flex-start; \r\n    align-items: flex-start; \r\n    margin: 20px;\r\n    font-size: 18px; \r\n    font-weight: normal;\r\n    color: grey;\r\n    border: none;\r\n    font-family: sans-serif;\r\n    resize: none;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n// Thank you for feedback modal\r\n// Feedback Modal\r\nexport const TYFeedbackContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    opacity: ${props => (props.selected ? '1' : '0')};\r\n    transition: all 0.3s ease-in-out;\r\n    pointer-events: ${props => (props.selected ? 'visible' : 'none' )};\r\n`\r\n\r\nexport const TYFeedbackInner = styled.div`\r\n    display: flex;\r\n    width: 50%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    transform: translateY(${props => (props.selected ? '20px' : '-60px' )});\r\n    transition: all 0.3s ease-in-out;\r\n    box-shadow: 0 0 2pt 1pt black;\r\n    padding: 0px;\r\n`\r\n\r\nexport const TYFeedbackHeader = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    background-color: #546E7A;\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    border-radius: 15px;\r\n    font-weight: normal;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { FeedbackSubmitButton, FeedbackText, FeedbackContainer, FeedbackInner, FeedbackHeader, FeedbackBody, FeedbackFooter } from './styles'\r\nimport './transition.css'\r\nimport { Event } from '../../libs/tracking'\r\n  \r\nconst Feedback = props => {\r\n    const [text, setText] = useState('')\r\n\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if ((e.charCode || e.keyCode) === 27) {\r\n            props.onClose()\r\n        }\r\n    }\r\n\r\n    const sentFeedback = () => {\r\n        props.onClose() // close the Modal\r\n\r\n        // GA record\r\n        Event('Desktop', 'Send Feedback Button', 'Feedback')\r\n\r\n        // send the feedback through the feedback route\r\n        fetch('/feedback', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ feedback: text })\r\n        }).then(res => res.json()).then(res => {\r\n            console.log(res)\r\n        }).catch((err) => {\r\n            console.log('Error:', err)\r\n        })\r\n\r\n        // This timing is to time the thank you for feedback dropdown\r\n        setTimeout(() => {\r\n            props.setFeedbackReceived(true)\r\n            setText('') // reset feedback text\r\n        }, 500)\r\n        setTimeout(() => {\r\n            props.setFeedbackReceived(false)\r\n        }, 2000)\r\n    }\r\n \r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown', closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown', closeOnEscapeKeyDown)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <FeedbackContainer className='modal' selected={props.show} onClick={props.onClose}>\r\n            <FeedbackInner  className='modal-content' selected={props.show} onClick={e => e.stopPropagation()}>\r\n                <FeedbackHeader>\r\n                    <p style={{ paddingLeft: '5%'}}>Send feedback</p>\r\n                    <p style={{ paddingRight: '5%', cursor: 'pointer' }} onClick={props.onClose}>X</p>\r\n                </FeedbackHeader>\r\n                <FeedbackBody>\r\n                    <FeedbackText placeholder=\"Have feedback? We'd love to hear it!\" onChange={(e) => setText(e.target.value)} value={text}/>\r\n                </FeedbackBody>\r\n                <FeedbackFooter>\r\n                    <FeedbackSubmitButton onClick={() => {props.onClose(); Event('Desktop', 'Cancel Feedback Button', 'Feedback')}}>Cancel</FeedbackSubmitButton>\r\n                    <FeedbackSubmitButton onClick={sentFeedback}>Send</FeedbackSubmitButton>\r\n                </FeedbackFooter>\r\n            </FeedbackInner>\r\n        </FeedbackContainer>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react'\r\nimport { TYFeedbackContainer, TYFeedbackInner, TYFeedbackHeader } from './styles'\r\n  \r\nconst FeedbackReceived = props => {\r\n\r\n    return (\r\n        <TYFeedbackContainer className='modal' selected={props.show} onClick={props.onClose}>\r\n            <TYFeedbackInner  className='modal-content' selected={props.show} onClick={e => e.stopPropagation()}>\r\n                <TYFeedbackHeader>\r\n                    <p style={{ paddingLeft: '5%'}}>Thanks! We’ve received your feedback.</p>\r\n                </TYFeedbackHeader>\r\n            </TYFeedbackInner>\r\n        </TYFeedbackContainer>\r\n    )\r\n}\r\n\r\nexport default FeedbackReceived","import React from 'react'\r\nimport { Event } from '../../libs/tracking'\r\nimport { OpenFeedbackText, OpenFeedbackButtonContainer, OpenFeedbackButton } from './styles'\r\n\r\nconst OpenFeedback = ({ setShowFeedback }) => (\r\n    <OpenFeedbackButtonContainer>\r\n        <OpenFeedbackButton>\r\n            <OpenFeedbackText onClick={() => {\r\n                setShowFeedback(true); \r\n                Event('Desktop', 'Open Feedback Button', 'Feedback')\r\n                }}>Send feedback</OpenFeedbackText>\r\n        </OpenFeedbackButton>\r\n    </OpenFeedbackButtonContainer>\r\n)\r\n\r\nexport default OpenFeedback","import styled from 'styled-components'\r\n\r\n// General\r\nexport const Font = styled.div`\r\n     /* @import url('//fonts.googleapis.com/css?family=Montserrat:light');   */\r\n     /* font-family: 'Montserrat', sans-serif; */\r\n     font-family: 'Roboto', 'sans-serif';\r\n     font-weight: 'bold';\r\n     white-space: pre-wrap; // allow for \\n and \\t to work, or break spaces\r\n     display: flex;\r\n     flex-direction: column;\r\n     display: flex;\r\n     justify-content: center;\r\n`\r\n","import styled from 'styled-components'\r\n// import { NavLink } from 'react-router-dom'\r\n\r\n// NavBar\r\nexport const NavbarContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    background-color: white;\r\n`\r\n\r\nexport const NavInner = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center; \r\n    align-items: center; \r\n`\r\n\r\nexport const NavbarImage = styled.img`\r\n    height: 2rem;\r\n    padding: 0px 20px 0px 0px;\r\n`\r\n","import React from 'react'\r\nimport {\r\n  NavInner, NavbarContainer, NavbarImage\r\n} from './styles'\r\n\r\nconst NavBar = () => (\r\n    <NavbarContainer>\r\n        <NavInner>\r\n          <NavbarImage src={`${process.env.PUBLIC_URL}/translate.png`} alt=\"Translate Image\" />\r\n          <p style={{ fontSize: '24px ', fontWeight: 'bold', fontFamily: 'sans-serif', color: '#5f6368' }}>Code Translate</p>\r\n        </NavInner>\r\n    </NavbarContainer>\r\n)\r\n\r\nexport default NavBar","import styled from 'styled-components'\r\n\r\n// TranslateBox\r\nexport const TranslateBoxContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`\r\n\r\n// Actually the translate box\r\nexport const TranslateBoxInner = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    /* height: 400px; */\r\n    /* justify-content: flex-start; \r\n    align-items: center; \r\n    border: solid grey;\r\n    margin-top: 75px;\r\n    background-color: white;\r\n    border-radius: 15px; */\r\n`\r\n\r\nexport const TranslateBoxBar = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between; \r\n    align-items: center; \r\n    padding: 15px 0px 15px 0px;\r\n`\r\n\r\nexport const TranslateBoxFrom = styled.textarea`\r\n    display: flex;\r\n    width: 90%;\r\n    height: 250px;\r\n    justify-content: flex-start; \r\n    align-items: flex-start; \r\n    margin: 5px;\r\n    font-size: 24px; \r\n    font-weight: normal;\r\n    color: black;\r\n    border: none;\r\n    font-family: sans-serif;\r\n    resize: none;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const TranslateBoxTo = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 275px;\r\n    justify-content: center; \r\n    align-items: flex-start; \r\n    font-size: 24px; \r\n    font-weight: normal;\r\n    color: white;\r\n    border: none;\r\n    background-color: #1A73E8;\r\n`\r\n\r\nexport const TranslateBoxDivider = styled.div`\r\n    width: 0px;\r\n    height: 100%;\r\n    border: solid grey;\r\n`\r\n\r\nexport const TranslateBoxOptionBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-start; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    /* border: 1px solid black; */\r\n`\r\n\r\nexport const TranslateBoxImage = styled.img`\r\n    height: 40px;\r\n    padding: 0px 10px 0px 10px;\r\n`\r\n\r\nexport const TranslateBoxOption = styled.button`\r\n    display: flex;\r\n    width: 125px;\r\n    justify-content: space-between; \r\n    align-items: center; \r\n    border: none;\r\n    font-size: 20px; \r\n    font-weight: bold;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    color: ${props => (props.selected ? '#1A73E8' : 'grey')};\r\n    flex-direction: column;\r\n    text-transform: uppercase;\r\n    /* margin-top: 5px;\r\n    margin-bottom: 5px; */\r\n`\r\n\r\nexport const TranslateBoxUnderline = styled.span`\r\n    width: 115px;\r\n    height: 5px;\r\n    background-color: ${props => (props.selected ? '#1A73E8' : '')};\r\n`\r\n\r\nexport const TranslateBoxLineHolder = styled.span`\r\n    width: 115px;\r\n    height: 5px;\r\n    background-color: ''\r\n`\r\n","import React, { useState } from 'react'\r\nimport {\r\n    TranslateBoxImage, TranslateBoxInner, TranslateBoxContainer, TranslateBoxBar, TranslateBoxOptionBox, TranslateBoxFrom, TranslateBoxTo, TranslateBoxDivider, TranslateBoxOption, TranslateBoxUnderline, TranslateBoxLineHolder\r\n} from './styles'\r\nimport { Event } from '../../libs/tracking'\r\nimport Editor from \"react-simple-code-editor\";\r\n\r\nconst TranslateBox = ({ tFrom, setTFrom, tTo, setTTo, inputCode, setInputCode, outputCode, setOutputCode }) => {\r\n    Event('Mobile', 'Translate Button', 'Translate')\r\n\r\n    const switchLanguages = () => {\r\n        Event('Desktop', 'Switch Languages Button', 'Switch')\r\n        const tempTo = tTo\r\n        const tempFrom = tFrom\r\n        setTTo(tempFrom)\r\n        setTFrom(tempTo)\r\n    }\r\n\r\n    return (\r\n        <TranslateBoxContainer>\r\n            <TranslateBoxInner id=\"translateForm\">\r\n                <TranslateBoxBar style={{ borderTop: 'solid silver', borderBottom: 'solid silver' }}>\r\n                    <TranslateBoxOptionBox style={{ alignItems: 'flex-start' }}>\r\n                        <TranslateBoxOption type=\"button\" selected={tFrom === \"java\"} id=\"java\" onClick={e => setTFrom(e.target.id)} style={{ borderRadius: '15px 0px 0px 0px' }}>\r\n                            Java\r\n                        </TranslateBoxOption>\r\n                        <TranslateBoxOption type=\"button\" style={{ marginTop: '10px' }} selected={tFrom === \"python\"} id=\"python\" onClick={e => setTFrom(e.target.id)} onClick={e => setTFrom(e.target.id)} active={tFrom === \"python\"}>\r\n                            Python\r\n                        </TranslateBoxOption>\r\n                    </TranslateBoxOptionBox>\r\n                    <TranslateBoxImage type=\"image\" onClick={ switchLanguages } src={`${process.env.PUBLIC_URL}/translate.png`} alt=\"Translate Image Submit\" /> {/* temporary submit box around image */}\r\n                    <TranslateBoxOptionBox style={{ alignItems: 'flex-end' }}>\r\n                        <TranslateBoxOption type=\"button\" selected={tTo === \"java\"} id=\"java\" onClick={e => setTTo(e.target.id)}>\r\n                            Java\r\n                        </TranslateBoxOption>\r\n                        <TranslateBoxOption type=\"button\" style={{ marginTop: '10px' }} selected={tTo === \"python\"} id=\"python\" onClick={e => setTTo(e.target.id)}>\r\n                            Python\r\n                        </TranslateBoxOption>\r\n                    </TranslateBoxOptionBox>\r\n                </TranslateBoxBar>\r\n                <TranslateBoxBar style={{ paddingBottom: '0px', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n                    <TranslateBoxFrom onChange={(e) => setInputCode(e.target.value)} style={{alignItems: 'flex-start'}} placeholder=\"Enter code\" />\r\n                    <TranslateBoxTo style={{ backgroundColor: 'rgba(232, 232, 232, 0.5)' }}>\r\n                        <Editor\r\n                            className=\"container__editor\"\r\n                            placeholder=\"Only Python to Java is currently supported. Please check back later this month for Java to Python. Thanks for visiting!\"\r\n                            value={outputCode}\r\n                            onValueChange={(outputCode) => setOutputCode(outputCode)}\r\n                            highlight={(outputCode) => outputCode}\r\n                            readOnly= \"true\"\r\n                            tabSize={4}\r\n                            style={{\r\n                                // alignItems: 'flex-start',\r\n                                color: 'black',\r\n                                width: '90%',\r\n                                height: '80%',\r\n                                margin: '15px 5px 15px 5px'\r\n                            }}\r\n                        />\r\n                        {/* <p style={{ width: '90%', height: '80%', margin: '15px 5px 15px 5px' }}>{outputCode}</p> */}\r\n                    </TranslateBoxTo>\r\n                </TranslateBoxBar>\r\n            </TranslateBoxInner>\r\n        </TranslateBoxContainer>\r\n    )\r\n}\r\n\r\nexport default TranslateBox","import styled from 'styled-components'\r\n\r\n// Feedback Modal\r\nexport const FeedbackContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    opacity: ${props => (props.selected ? '1' : '0')};\r\n    transition: all 0.3s ease-in-out;\r\n    pointer-events: ${props => (props.selected ? 'visible' : 'none' )};\r\n`\r\n\r\nexport const FeedbackInner = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: space-between; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    background-color: white;\r\n    /* border-radius: 15px; */\r\n    transform: translateY(${props => (props.selected ? '0px' : '-200px' )});\r\n    transition: all 0.3s ease-in-out;\r\n    box-shadow: 0 0 2pt 1pt black;\r\n    padding: 0px;\r\n`\r\n\r\n// Actual Feedback Content\r\nexport const FeedbackHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between; \r\n    align-items: center;\r\n    width: 100%;\r\n    height: 75px;\r\n    background-color: #546E7A;\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n`\r\n\r\nexport const FeedbackBody = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    width: 100%;\r\n    height: 100%;\r\n    border-top: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n`\r\n\r\nexport const FeedbackFooter = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end; \r\n    align-items: center;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding-right: 15px;\r\n`\r\n\r\nexport const FeedbackSubmitButton = styled.p`\r\n    display: flex;\r\n    width: 30%;\r\n    height: 100%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`\r\n\r\nexport const SubmitButton = styled.button`\r\n    display: flex;\r\n    justify-content: center; \r\n    align-items: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #546E7A;\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 0px;\r\n    margin: 15px;\r\n    border-radius: 5px;\r\n    cursor: 'pointer';\r\n    border: 2px solid white;\r\n`\r\n\r\n// Open Modal Button\r\nexport const OpenFeedbackButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nexport const OpenFeedbackButton = styled.div`\r\n    width: 95%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n`\r\n\r\n\r\nexport const OpenFeedbackText = styled.p`\r\n    cursor: pointer;\r\n    font-weight: normal;\r\n    font-style: italic;\r\n    font-size: 18px;\r\n    margin: 5px;\r\n    padding: 0px;\r\n    padding-top: 10px;\r\n    :hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nexport const FeedbackText = styled.textarea`\r\n    display: flex;\r\n    width: 95%;\r\n    height: 95%;\r\n    justify-content: flex-start; \r\n    align-items: flex-start; \r\n    margin: 20px;\r\n    font-size: 18px; \r\n    font-weight: normal;\r\n    color: grey;\r\n    border: none;\r\n    font-family: sans-serif;\r\n    resize: none;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n// Thank you for feedback modal\r\n// Feedback Modal\r\nexport const TYFeedbackContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    opacity: ${props => (props.selected ? '1' : '0')};\r\n    transition: all 0.3s ease-in-out;\r\n    pointer-events: ${props => (props.selected ? 'visible' : 'none' )};\r\n`\r\n\r\nexport const TYFeedbackInner = styled.div`\r\n    display: flex;\r\n    width: 90%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    flex-direction: column;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    transform: translateY(${props => (props.selected ? '20px' : '-60px' )});\r\n    transition: all 0.3s ease-in-out;\r\n    box-shadow: 0 0 2pt 1pt black;\r\n    padding: 0px;\r\n`\r\n\r\nexport const TYFeedbackHeader = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    align-items: center;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    font-weight: normal;\r\n    background-color: #546E7A;\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    border-radius: 15px;\r\n    text-align: center;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { SubmitButton, FeedbackText, FeedbackContainer, FeedbackInner, FeedbackHeader, FeedbackBody, FeedbackFooter } from './styles'\r\nimport './transition.css'\r\nimport { Event } from '../../libs/tracking'\r\n  \r\nconst Feedback = props => {\r\n    const [text, setText] = useState('')\r\n\r\n    const closeOnEscapeKeyDown = (e) => {\r\n        if ((e.charCode || e.keyCode) === 27) {\r\n            props.onClose()\r\n        }\r\n    }\r\n\r\n    const sentFeedback = () => {\r\n        props.onClose()\r\n\r\n        // GA record\r\n        Event('Mobile', 'Send Feedback Button', 'Feedback')\r\n\r\n        // send the feedback through the feedback route\r\n        fetch('/feedback', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ feedback: text })\r\n        }).then(res => res.json()).then(res => {\r\n            console.log(res)\r\n        }).catch((err) => {\r\n            console.log('Error:', err)\r\n        })\r\n\r\n        setTimeout(() => {\r\n            props.setFeedbackReceived(true)\r\n            setText('')\r\n        }, 500)\r\n        setTimeout(() => {\r\n            props.setFeedbackReceived(false)\r\n        }, 2000)\r\n    }\r\n \r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown', closeOnEscapeKeyDown)\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown', closeOnEscapeKeyDown)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <FeedbackContainer className='modal' selected={props.show} onClick={props.onClose}>\r\n            <FeedbackInner  className='modal-content' selected={props.show} onClick={e => e.stopPropagation()}>\r\n                <FeedbackHeader>\r\n                    <SubmitButton style={{  }} onClick={() => {props.onClose(); Event('Mobile', 'Cancel Feedback Button', 'Feedback')}}>X</SubmitButton>\r\n                    <p style={{ fontWeight: 'normal', width: '60%' }}>Send feedback</p>\r\n                    <SubmitButton style={{ fontWeight: 'bold' }} onClick={sentFeedback}>></SubmitButton>\r\n                </FeedbackHeader>\r\n                <FeedbackBody>\r\n                    <FeedbackText placeholder=\"Have feedback? We'd love to hear it!\" onChange={(e) => setText(e.target.value)} value={text}/>\r\n                </FeedbackBody>\r\n            </FeedbackInner>\r\n        </FeedbackContainer>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react'\r\nimport { TYFeedbackContainer, TYFeedbackInner, TYFeedbackHeader } from './styles'\r\n  \r\nconst FeedbackReceived = props => {\r\n\r\n    return (\r\n        <TYFeedbackContainer className='modal' selected={props.show} onClick={props.onClose}>\r\n            <TYFeedbackInner  className='modal-content' selected={props.show} onClick={e => e.stopPropagation()}>\r\n                <TYFeedbackHeader>\r\n                    <p style={{ margin: '10px'}}>Thanks! We’ve received your feedback.</p>\r\n                </TYFeedbackHeader>\r\n            </TYFeedbackInner>\r\n        </TYFeedbackContainer>\r\n    )\r\n}\r\n\r\nexport default FeedbackReceived","import React from 'react'\r\nimport { OpenFeedbackText, OpenFeedbackButtonContainer, OpenFeedbackButton } from './styles'\r\nimport { Event } from '../../libs/tracking'\r\n\r\nconst OpenFeedback = ({ setShowFeedback }) => (\r\n    <OpenFeedbackButtonContainer>\r\n        <OpenFeedbackButton>\r\n            <OpenFeedbackText onClick={() => {\r\n                setShowFeedback(true); \r\n                Event('Mobile', 'Send Feedback Button', 'Feedback')\r\n                }}>Send feedback</OpenFeedbackText>\r\n        </OpenFeedbackButton>\r\n    </OpenFeedbackButtonContainer>\r\n)\r\n\r\nexport default OpenFeedback","import styled from 'styled-components'\r\n\r\n// TranslateBox\r\nexport const TranslateButtonContainer = styled.div`\r\n    display: flex; \r\n    width: 100%; \r\n    height: 50px;\r\n    margin-top: 15px;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    background-color: white;\r\n`\r\n\r\n// Actually the translate box\r\nexport const TranslateButtonInner = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 50px;\r\n    justify-content: center; \r\n    align-items: center; \r\n    flex-direction: row;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n`\r\n\r\nexport const TranslateButtonObject = styled.div`\r\n    display: flex;\r\n    width: 90%;\r\n    height: 100%;\r\n    justify-content: center; \r\n    align-items: center; \r\n    background-color: #1A73E8;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    border-radius: 5px;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n`","import React, { useState } from 'react'\r\nimport { Event } from '../../libs/tracking'\r\nimport {\r\n    TranslateButtonContainer, TranslateButtonInner, TranslateButtonObject\r\n} from './styles'\r\n\r\nconst TranslateButton = ({ tFrom, setTFrom, tTo, setTTo, inputCode, setInputCode, outputCode, setOutputCode }) => {\r\n    const handleSubmit = () => {\r\n        Event('Mobile', 'Translate Button', 'Translate')\r\n\r\n        console.log(\"...Translating...\")\r\n        console.log(tFrom)\r\n        console.log(tTo)\r\n        console.log(inputCode)\r\n\r\n        // e.preventDefault() // prevents refresh of the page\r\n        fetch('/translate', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ tTo, tFrom, inputCode })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            console.log(res)\r\n            if (res.outputCode) {\r\n                setOutputCode(res.outputCode)\r\n            } else {\r\n                setOutputCode(res.message)\r\n            }\r\n        }).catch((err) => {\r\n            console.log('Error:', err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TranslateButtonContainer>\r\n            <TranslateButtonInner>\r\n                <TranslateButtonObject onClick={handleSubmit}>Translate</TranslateButtonObject>\r\n            </TranslateButtonInner>\r\n        </TranslateButtonContainer>\r\n    )\r\n}\r\n\r\nexport default TranslateButton","import React, { useState } from 'react'\r\nimport NavBar from '../../mobileComponents/Navbar'\r\nimport TranslateBox from '../../mobileComponents/TranslateBox'\r\nimport Feedback from '../../mobileComponents/Feedback'\r\nimport FeedbackReceived from '../../mobileComponents/Feedback/ThankYou'\r\nimport OpenFeedback from '../../mobileComponents/Feedback/OpenFeedback'\r\nimport TranslateButton from '../../mobileComponents/TranslateButton'\r\nimport { Font } from '../styles'\r\n\r\nconst Mobile = ({ tFrom, setTFrom, tTo, setTTo, inputCode, setInputCode, outputCode, setOutputCode }) => {\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n    const [feedbackReceived, setFeedbackReceived] = useState(false)\r\n\r\n    return (\r\n        <Font style={{fontFamily: 'sans-serif', fontWeight: 'bold', display: 'flex', flexDirection: 'column'}}>\r\n            <NavBar/>\r\n            <TranslateBox tFrom={tFrom} setTFrom={setTFrom} tTo={tTo} setTTo={setTTo} inputCode={inputCode} setInputCode={setInputCode} outputCode={outputCode} setOutputCode={setOutputCode}/>\r\n            <TranslateButton  tFrom={tFrom} setTFrom={setTFrom} tTo={tTo} setTTo={setTTo} inputCode={inputCode} setInputCode={setInputCode} outputCode={outputCode} setOutputCode={setOutputCode}/>\r\n            <OpenFeedback setShowFeedback={setShowFeedback}/>\r\n            \r\n            <Feedback onClose={() => setShowFeedback(false)} show={showFeedback} setFeedbackReceived={setFeedbackReceived}/>\r\n            <FeedbackReceived show={feedbackReceived}/>\r\n        </Font>       \r\n    )\r\n}\r\n\r\nexport default Mobile","import React, { useState } from 'react'\r\nimport NavBar from '../../components/Navbar'\r\nimport TranslateBox from '../../components/TranslateBox'\r\nimport Feedback from '../../components/Feedback'\r\nimport FeedbackReceived from '../../components/Feedback/ThankYou'\r\nimport OpenFeedback from '../../components/Feedback/OpenFeedback'\r\nimport { Font } from '../styles'\r\nimport Mobile from '../Mobile';\r\nimport { BrowserView, MobileView } from 'react-device-detect'\r\n\r\nconst Translate = () => {\r\n    // feedback variables\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n    const [feedbackReceived, setFeedbackReceived] = useState(false)\r\n\r\n    // translation variables\r\n    const [tFrom, setTFrom] = useState('python')\r\n    const [tTo, setTTo] = useState('java')\r\n    const [inputCode, setInputCode] = useState('')\r\n    const [outputCode, setOutputCode] = useState('')\r\n\r\n    return (\r\n        <Font style={{ fontWeight: 'bold', color: 'black' }}>\r\n            <BrowserView>\r\n                <NavBar />\r\n                <TranslateBox tFrom={tFrom} setTFrom={setTFrom} tTo={tTo} setTTo={setTTo} inputCode={inputCode} setInputCode={setInputCode} outputCode={outputCode} setOutputCode={setOutputCode}/>\r\n                <OpenFeedback setShowFeedback={setShowFeedback}/>\r\n\r\n                <Feedback onClose={() => setShowFeedback(false)} show={showFeedback} setFeedbackReceived={setFeedbackReceived}/>\r\n                <FeedbackReceived show={feedbackReceived}/>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <Mobile tFrom={tFrom} setTFrom={setTFrom} tTo={tTo} setTTo={setTTo} inputCode={inputCode} setInputCode={setInputCode} outputCode={outputCode} setOutputCode={setOutputCode}/>\r\n            </MobileView>\r\n        </Font>       \r\n    )\r\n}\r\n\r\nexport default Translate","import React, { useEffect } from 'react';\r\nimport { PageView, initGA } from './libs/tracking';\r\nimport Translate from './containers/Translate';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'typeface-roboto';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    initGA(\"UA-199218131-3\")  // Using Universal Analytics Version for www.codetranslate.app\r\n    PageView()\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Translate} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}